name: CI/CD mlops_mini

on: [push, pull_request]

jobs:

  build:

    env:  
      HF_TOKEN: ${{secrets.HF_TOKEN}} 

    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: ["3.12", "3.13"]
    steps:  
      - name: pull git repo and setup dependencies
        uses: actions/checkout@v4   
      - name: install python
        uses: actions/setup-python@v5
        with: 
          python-version: "3.12"
      - name: upgrade pip
        run: python -m pip install --upgrade pip   
      - name: install dependencies
        run: pip install -r requirements.txt   
        # run: |
        #   if [ $RUNNER_OS == 'Windows' ]; then
        #     pip install -r requirements-windows.txt
        #   else
        #     pip install -r requirements-linux.txt
        #   fi
      - name: run pytest tests
        run: |
          pip install pytest
          pytest -v -s -x

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v1
    #     with:
    #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    #   - name: Set up Docker Buildx
    #     id: buildx
    #     uses: docker/setup-buildx-action@v3
    #   - name: Build and push
    #     id: docker_build
    #     uses: docker/build-push-action@v5
    #     with:
    #       context: ./
    #       file: ./Dockerfile
    #       builder: ${{ steps.buildx.outputs.name }}
    #       push: true
    #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mlops_mini:latest
    #       cache-from: type=local,src=/tmp/.buildx-cache
    #       cache-to: type=local,dest=/tmp/.buildx-cache
    #   - name: Image digest
    #     run: echo ${{ steps.docker_build.outputs.digest }}
         
  # deploy:    ##--------- UNCOMENT WHEN YOU HAVE SERVER HOST SET-UP ACCORDING TO INSTRUCTIONS IN README---------##

  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   env:  
  #     HF_TOKEN: ${{secrets.HF_TOKEN}} 
  #   steps:
  #     - name: deploy to ubuntu server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{secrets.PROD_HOST}}
  #         username: ${{secrets.PROD_USERNAME}}
  #         password: ${{secrets.PROD_PASSWORD}}
  #         script: |
  #           cd app/src
  #           git pull
  #           echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
 